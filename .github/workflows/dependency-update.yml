name: Dependency Updates & Security

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  # Check for outdated dependencies
  check-outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for outdated packages
      run: npm outdated || echo "Some packages are outdated"
      
    - name: Create issue for outdated dependencies
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'dependencies'
          });
          
          if (issues.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“¦ Dependencies Update Available',
              body: `## Dependency Update Check
              
              Some dependencies are outdated and need to be updated.
              
              **Next Steps:**
              1. Run \`npm update\` to update dependencies
              2. Test the application thoroughly
              3. Commit and push changes
              
              **Generated on:** ${new Date().toISOString()}`,
              labels: ['dependencies', 'maintenance']
            });
          }

  # Security vulnerability scan
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate
      
    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'security'
          });
          
          if (issues.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ”’ Security Vulnerabilities Detected',
              body: `## Security Audit Alert
              
              Security vulnerabilities have been detected in the project dependencies.
              
              **Action Required:**
              1. Review the security audit report
              2. Update vulnerable dependencies
              3. Test thoroughly after updates
              4. Consider using \`npm audit fix\` for automatic fixes
              
              **Generated on:** ${new Date().toISOString()}`,
              labels: ['security', 'high-priority']
            });
          }

  # Update package-lock.json
  update-lockfile:
    name: Update Package Lock File
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Update package-lock.json
      run: |
        npm update
        npm audit fix --force
        
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies and fix security vulnerabilities'
        title: 'Automated Dependency Update'
        body: |
          ## Automated Dependency Update
          
          This PR updates dependencies and fixes security vulnerabilities.
          
          **Changes:**
          - Updated outdated packages
          - Fixed security vulnerabilities
          - Updated package-lock.json
          
          **Testing:**
          - [ ] Verify application builds successfully
          - [ ] Test all functionality
          - [ ] Check for any breaking changes
        branch: automated-dependency-update
        delete-branch: true
